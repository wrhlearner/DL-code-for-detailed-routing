1. Executing Verilog-2005 frontend: ./designs/src/swerv/swerv_wrapper.sv2v.v
2. Executing Verilog-2005 frontend: ./designs/nangate45/swerv/macros.v
3. Executing Liberty frontend: ./objects/nangate45/swerv_wrapper/base/lib/NangateOpenCellLibrary_typical.lib
4. Executing Liberty frontend: ./objects/nangate45/swerv_wrapper/base/lib/fakeram45_2048x39.lib
5. Executing Liberty frontend: ./objects/nangate45/swerv_wrapper/base/lib/fakeram45_256x34.lib
6. Executing Liberty frontend: ./objects/nangate45/swerv_wrapper/base/lib/fakeram45_64x21.lib
7. Executing Verilog-2005 frontend: /home/jborg/Data/Research/DLPnR/OpenROAD-flow-scripts/flow/platforms/nangate45/cells_clkgate.v
Using ABC speed script.
[FLOW] Extracting clock period from SDC file: ./results/nangate45/swerv_wrapper/base/clock_period.txt
[FLOW] Setting clock period to 3.4
8. Executing SYNTH pass.
8.1. Executing HIERARCHY pass (managing design hierarchy).
8.2. Executing AST frontend in derive mode using pre-parsed AST for module `\swerv_wrapper'.
8.2.1. Analyzing design hierarchy..
8.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\mem'.
8.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\swerv'.
8.2.4. Analyzing design hierarchy..
8.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\dma_ctrl'.
8.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\pic_ctrl'.
8.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu'.
8.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\exu'.
8.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\dec'.
8.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\ifu'.
8.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\dmi_wrapper'.
8.2.12. Executing AST frontend in derive mode using pre-parsed AST for module `\dbg'.
8.2.13. Executing AST frontend in derive mode using pre-parsed AST for module `\rvclkhdr'.
8.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\ifu_ic_mem'.
8.2.15. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_dccm_mem'.
8.2.16. Analyzing design hierarchy..
8.2.17. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffs_WIDTH3'.
8.2.18. Executing AST frontend in derive mode using pre-parsed AST for module `\ram_2048x39'.
8.2.19. Executing AST frontend in derive mode using pre-parsed AST for module `\IC_DATA_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_IC_DEPTH8'.
8.2.20. Executing AST frontend in derive mode using pre-parsed AST for module `\IC_TAG_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_TAG_DEPTH64'.
8.2.21. Executing AST frontend in derive mode using pre-parsed AST for module `\clockhdr'.
8.2.22. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH64'.
8.2.23. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH2'.
8.2.24. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffs_WIDTH1'.
8.2.25. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffs_WIDTH4'.
8.2.26. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffs_WIDTH32'.
8.2.27. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH32'.
8.2.28. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH3'.
8.2.29. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffsc_WIDTH1'.
8.2.30. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH1'.
8.2.31. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffs_WIDTH5'.
8.2.32. Executing AST frontend in derive mode using pre-parsed AST for module `\dmi_jtag_to_core_sync'.
8.2.33. Executing AST frontend in derive mode using pre-parsed AST for module `\rvjtag_tap'.
8.2.34. Executing AST frontend in derive mode using pre-parsed AST for module `\ifu_mem_ctl'.
8.2.35. Executing AST frontend in derive mode using pre-parsed AST for module `\ifu_aln_ctl'.
8.2.36. Executing AST frontend in derive mode using pre-parsed AST for module `\ifu_bp_ctl'.
8.2.37. Executing AST frontend in derive mode using pre-parsed AST for module `\ifu_ifc_ctl'.
8.2.38. Executing AST frontend in derive mode using pre-parsed AST for module `\dec_trigger'.
8.2.39. Executing AST frontend in derive mode using pre-parsed AST for module `\dec_gpr_ctl_GPR_BANKS1_GPR_BANKS_LOG21'.
8.2.40. Executing AST frontend in derive mode using pre-parsed AST for module `\dec_tlu_ctl'.
8.2.41. Executing AST frontend in derive mode using pre-parsed AST for module `\dec_decode_ctl'.
8.2.42. Executing AST frontend in derive mode using pre-parsed AST for module `\dec_ib_ctl'.
8.2.43. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH31'.
8.2.44. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffs_WIDTH2'.
8.2.45. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH63'.
8.2.46. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH33'.
8.2.47. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH74'.
8.2.48. Executing AST frontend in derive mode using pre-parsed AST for module `\exu_alu_ctl'.
8.2.49. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH5'.
8.2.50. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH76'.
8.2.51. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH20'.
8.2.52. Executing AST frontend in derive mode using pre-parsed AST for module `\exu_div_ctl'.
8.2.53. Executing AST frontend in derive mode using pre-parsed AST for module `\exu_mul_ctl'.
8.2.54. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_bus_intf'.
8.2.55. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_clkdomain'.
8.2.56. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_trigger'.
8.2.57. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_ecc'.
8.2.58. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_stbuf'.
8.2.59. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_dccm_ctl'.
8.2.60. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_lsc_ctl'.
8.2.61. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH4'.
8.2.62. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH8'.
8.2.63. Executing AST frontend in derive mode using pre-parsed AST for module `\cmp_and_mux_ID_BITS8_INTPRIORITY_BITS4'.
8.2.64. Executing AST frontend in derive mode using pre-parsed AST for module `\configurable_gw'.
8.2.65. Executing AST frontend in derive mode using pre-parsed AST for module `\rvsyncss_WIDTH8'.
8.2.66. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH32'.
8.2.67. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffs_WIDTH8'.
8.2.68. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH64'.
8.2.69. Executing AST frontend in derive mode using pre-parsed AST for module `\rvrangecheck_f00c0000_32'.
8.2.70. Executing AST frontend in derive mode using pre-parsed AST for module `\rvrangecheck_f0040000_64'.
8.2.71. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffsc_WIDTH2'.
8.2.72. Analyzing design hierarchy..
8.2.73. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffs_WIDTH64'.
8.2.74. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH18'.
8.2.75. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_addrcheck'.
8.2.76. Executing AST frontend in derive mode using pre-parsed AST for module `\rvlsadder'.
8.2.77. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH12'.
8.2.78. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH7'.
8.2.79. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH16'.
8.2.80. Executing AST frontend in derive mode using pre-parsed AST for module `\rvecc_encode'.
8.2.81. Executing AST frontend in derive mode using pre-parsed AST for module `\rvecc_decode'.
8.2.82. Executing AST frontend in derive mode using pre-parsed AST for module `\rvmaskandmatch'.
8.2.83. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_bus_buffer'.
8.2.84. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH33'.
8.2.85. Executing AST frontend in derive mode using pre-parsed AST for module `\rvtwoscomp_WIDTH32'.
8.2.86. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH6'.
8.2.87. Executing AST frontend in derive mode using pre-parsed AST for module `\rvbradder'.
8.2.88. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH12'.
8.2.89. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH74'.
8.2.90. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH20'.
8.2.91. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH76'.
8.2.92. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH63'.
8.2.93. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH31'.
8.2.94. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH68'.
8.2.95. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH37'.
8.2.96. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH67'.
8.2.97. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH9'.
8.2.98. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH26'.
8.2.99. Executing AST frontend in derive mode using pre-parsed AST for module `\dec_dec_ctl'.
8.2.100. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH10'.
8.2.101. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffs_WIDTH6'.
8.2.102. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH17'.
8.2.103. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH14'.
8.2.104. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH8'.
8.2.105. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH22'.
8.2.106. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH15'.
8.2.107. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH34'.
8.2.108. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH38'.
8.2.109. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH22'.
8.2.110. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH11'.
8.2.111. Executing AST frontend in derive mode using pre-parsed AST for module `\rvsyncss_WIDTH6'.
8.2.112. Executing AST frontend in derive mode using pre-parsed AST for module `\rvbtb_ghr_hash'.
8.2.113. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH9'.
8.2.114. Executing AST frontend in derive mode using pre-parsed AST for module `\rvbtb_tag_hash'.
8.2.115. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH28'.
8.2.116. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH13'.
8.2.117. Executing AST frontend in derive mode using pre-parsed AST for module `\rvbtb_addr_hash'.
8.2.118. Executing AST frontend in derive mode using pre-parsed AST for module `\ifu_compress_ctl'.
8.2.119. Executing AST frontend in derive mode using pre-parsed AST for module `\rveven_paritycheck'.
8.2.120. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH128'.
8.2.121. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH48'.
8.2.122. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe_WIDTH53'.
8.2.123. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffs_WIDTH11'.
8.2.124. Executing AST frontend in derive mode using pre-parsed AST for module `\rveven_paritygen_WIDTH16'.
8.2.125. Executing AST frontend in derive mode using pre-parsed AST for module `\OPENROAD_CLKGATE'.
8.2.126. Executing AST frontend in derive mode using pre-parsed AST for module `\rveven_paritycheck_WIDTH20'.
8.2.127. Executing AST frontend in derive mode using pre-parsed AST for module `\ram_64x21'.
8.2.128. Executing AST frontend in derive mode using pre-parsed AST for module `\rveven_paritygen_WIDTH20'.
8.2.129. Executing AST frontend in derive mode using pre-parsed AST for module `\ram_256x34'.
8.2.130. Analyzing design hierarchy..
8.2.131. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH53'.
8.2.132. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH48'.
8.2.133. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH128'.
8.2.134. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH16'.
8.2.135. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH28'.
8.2.136. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH26'.
8.2.137. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH14'.
8.2.138. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH17'.
8.2.139. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH37'.
8.2.140. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH67'.
8.2.141. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff_WIDTH68'.
8.2.142. Analyzing design hierarchy..
8.2.143. Analyzing design hierarchy..
8.3. Executing PROC pass (convert processes to netlists).
8.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
8.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
8.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
8.3.4. Executing PROC_INIT pass (extract init attributes).
8.3.5. Executing PROC_ARST pass (detect async resets in processes).
8.3.6. Executing PROC_ROM pass (convert switches to ROMs).
8.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
8.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
8.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
8.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).
8.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
8.3.12. Executing OPT_EXPR pass (perform const folding).
8.4. Executing OPT_EXPR pass (perform const folding).
8.5. Executing OPT_CLEAN pass (remove unused cells and wires).
8.6. Executing CHECK pass (checking for obvious problems).
Warning: Wire exu.\exu_mp_pkt [51] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [50] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [49] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [48] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [47] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [46] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [45] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [44] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [43] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [42] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [41] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [40] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [39] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [38] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [37] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [36] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [35] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [34] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [33] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [32] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [31] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [30] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [29] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [28] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [27] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [26] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [25] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [24] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [23] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [22] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [21] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [20] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [19] is used but has no driver.
Warning: Wire exu.\exu_mp_pkt [18] is used but has no driver.
8.7. Executing OPT pass (performing simple optimizations).
8.7.1. Executing OPT_EXPR pass (perform const folding).
8.7.2. Executing OPT_MERGE pass (detect identical cells).
8.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
8.7.5. Executing OPT_MERGE pass (detect identical cells).
8.7.6. Executing OPT_DFF pass (perform DFF optimizations).
8.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
8.7.8. Executing OPT_EXPR pass (perform const folding).
8.7.9. Rerunning OPT passes. (Maybe there is more to do..)
8.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
8.7.12. Executing OPT_MERGE pass (detect identical cells).
8.7.13. Executing OPT_DFF pass (perform DFF optimizations).
8.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
8.7.15. Executing OPT_EXPR pass (perform const folding).
8.7.16. Finished OPT passes. (There is nothing left to do.)
8.8. Executing FSM pass (extract and optimize FSM).
8.8.1. Executing FSM_DETECT pass (finding FSMs in design).
8.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
8.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
8.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
8.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
8.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
8.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).
8.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
8.9. Executing OPT pass (performing simple optimizations).
8.9.1. Executing OPT_EXPR pass (perform const folding).
8.9.2. Executing OPT_MERGE pass (detect identical cells).
8.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
8.9.5. Executing OPT_MERGE pass (detect identical cells).
8.9.6. Executing OPT_DFF pass (perform DFF optimizations).
8.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
8.9.8. Executing OPT_EXPR pass (perform const folding).
8.9.9. Rerunning OPT passes. (Maybe there is more to do..)
8.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
8.9.12. Executing OPT_MERGE pass (detect identical cells).
8.9.13. Executing OPT_DFF pass (perform DFF optimizations).
8.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
8.9.15. Executing OPT_EXPR pass (perform const folding).
8.9.16. Rerunning OPT passes. (Maybe there is more to do..)
8.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
8.9.19. Executing OPT_MERGE pass (detect identical cells).
8.9.20. Executing OPT_DFF pass (perform DFF optimizations).
8.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
8.9.22. Executing OPT_EXPR pass (perform const folding).
8.9.23. Finished OPT passes. (There is nothing left to do.)
8.10. Executing WREDUCE pass (reducing word size of cells).
8.11. Executing PEEPOPT pass (run peephole optimizers).
8.12. Executing OPT_CLEAN pass (remove unused cells and wires).
8.13. Executing ALUMACC pass (create $alu and $macc cells).
8.14. Executing SHARE pass (SAT-based resource sharing).
8.15. Executing OPT pass (performing simple optimizations).
8.15.1. Executing OPT_EXPR pass (perform const folding).
8.15.2. Executing OPT_MERGE pass (detect identical cells).
8.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
8.15.5. Executing OPT_MERGE pass (detect identical cells).
8.15.6. Executing OPT_DFF pass (perform DFF optimizations).
8.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
8.15.8. Executing OPT_EXPR pass (perform const folding).
8.15.9. Rerunning OPT passes. (Maybe there is more to do..)
8.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
8.15.12. Executing OPT_MERGE pass (detect identical cells).
8.15.13. Executing OPT_DFF pass (perform DFF optimizations).
8.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
8.15.15. Executing OPT_EXPR pass (perform const folding).
8.15.16. Finished OPT passes. (There is nothing left to do.)
8.16. Executing MEMORY pass.
8.16.1. Executing OPT_MEM pass (optimize memories).
8.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
8.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
8.16.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).
8.16.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
8.16.6. Executing OPT_CLEAN pass (remove unused cells and wires).
8.16.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
8.16.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
8.16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
8.16.10. Executing MEMORY_COLLECT pass (generating $mem cells).
8.17. Executing OPT_CLEAN pass (remove unused cells and wires).
8.18. Executing OPT pass (performing simple optimizations).
8.18.1. Executing OPT_EXPR pass (perform const folding).
8.18.2. Executing OPT_MERGE pass (detect identical cells).
8.18.3. Executing OPT_DFF pass (perform DFF optimizations).
8.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
8.18.5. Finished fast OPT passes.
8.19. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
8.20. Executing OPT pass (performing simple optimizations).
8.20.1. Executing OPT_EXPR pass (perform const folding).
8.20.2. Executing OPT_MERGE pass (detect identical cells).
8.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
8.20.5. Executing OPT_MERGE pass (detect identical cells).
8.20.6. Executing OPT_SHARE pass.
8.20.7. Executing OPT_DFF pass (perform DFF optimizations).
8.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
8.20.9. Executing OPT_EXPR pass (perform const folding).
8.20.10. Rerunning OPT passes. (Maybe there is more to do..)
8.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
8.20.13. Executing OPT_MERGE pass (detect identical cells).
8.20.14. Executing OPT_SHARE pass.
8.20.15. Executing OPT_DFF pass (perform DFF optimizations).
8.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
8.20.17. Executing OPT_EXPR pass (perform const folding).
8.20.18. Rerunning OPT passes. (Maybe there is more to do..)
8.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
8.20.21. Executing OPT_MERGE pass (detect identical cells).
8.20.22. Executing OPT_SHARE pass.
8.20.23. Executing OPT_DFF pass (perform DFF optimizations).
8.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
8.20.25. Executing OPT_EXPR pass (perform const folding).
8.20.26. Finished OPT passes. (There is nothing left to do.)
8.21. Executing TECHMAP pass (map to technology primitives).
8.21.1. Executing Verilog-2005 frontend: /home/jborg/Data/Research/DLPnR/OpenROAD-flow-scripts/tools/install/yosys/bin/../share/yosys/techmap.v
8.21.2. Continuing TECHMAP pass.
8.21.105. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
8.21.106. Executing OPT_EXPR pass (perform const folding).
8.22. Executing OPT pass (performing simple optimizations).
8.22.1. Executing OPT_EXPR pass (perform const folding).
8.22.2. Executing OPT_MERGE pass (detect identical cells).
8.22.3. Executing OPT_DFF pass (perform DFF optimizations).
8.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
8.22.5. Finished fast OPT passes.
8.23. Executing ABC pass (technology mapping using ABC).
8.23.1. Extracting gate netlist of module `\IC_DATA_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_IC_DEPTH8' to `<abc-temp-dir>/input.blif'..
8.23.2. Extracting gate netlist of module `\IC_TAG_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_TAG_DEPTH64' to `<abc-temp-dir>/input.blif'..
8.23.3. Extracting gate netlist of module `\OPENROAD_CLKGATE' to `<abc-temp-dir>/input.blif'..
8.23.4. Extracting gate netlist of module `\clockhdr' to `<abc-temp-dir>/input.blif'..
8.23.5. Extracting gate netlist of module `\cmp_and_mux_ID_BITS8_INTPRIORITY_BITS4' to `<abc-temp-dir>/input.blif'..
8.23.6. Extracting gate netlist of module `\configurable_gw' to `<abc-temp-dir>/input.blif'..
8.23.7. Extracting gate netlist of module `\dbg' to `<abc-temp-dir>/input.blif'..
8.23.8. Extracting gate netlist of module `\dec' to `<abc-temp-dir>/input.blif'..
8.23.9. Extracting gate netlist of module `\dec_dec_ctl' to `<abc-temp-dir>/input.blif'..
8.23.10. Extracting gate netlist of module `\dec_decode_ctl' to `<abc-temp-dir>/input.blif'..
8.23.11. Extracting gate netlist of module `\dec_gpr_ctl_GPR_BANKS1_GPR_BANKS_LOG21' to `<abc-temp-dir>/input.blif'..
8.23.12. Extracting gate netlist of module `\dec_ib_ctl' to `<abc-temp-dir>/input.blif'..
8.23.13. Extracting gate netlist of module `\dec_tlu_ctl' to `<abc-temp-dir>/input.blif'..
8.23.14. Extracting gate netlist of module `\dec_trigger' to `<abc-temp-dir>/input.blif'..
8.23.15. Extracting gate netlist of module `\dma_ctrl' to `<abc-temp-dir>/input.blif'..
8.23.16. Extracting gate netlist of module `\dmi_jtag_to_core_sync' to `<abc-temp-dir>/input.blif'..
8.23.17. Extracting gate netlist of module `\dmi_wrapper' to `<abc-temp-dir>/input.blif'..
8.23.18. Extracting gate netlist of module `\exu' to `<abc-temp-dir>/input.blif'..
8.23.19. Extracting gate netlist of module `\exu_alu_ctl' to `<abc-temp-dir>/input.blif'..
8.23.20. Extracting gate netlist of module `\exu_div_ctl' to `<abc-temp-dir>/input.blif'..
8.23.21. Extracting gate netlist of module `\exu_mul_ctl' to `<abc-temp-dir>/input.blif'..
8.23.22. Extracting gate netlist of module `\ifu' to `<abc-temp-dir>/input.blif'..
8.23.23. Extracting gate netlist of module `\ifu_aln_ctl' to `<abc-temp-dir>/input.blif'..
8.23.24. Extracting gate netlist of module `\ifu_bp_ctl' to `<abc-temp-dir>/input.blif'..
8.23.25. Extracting gate netlist of module `\ifu_compress_ctl' to `<abc-temp-dir>/input.blif'..
8.23.26. Extracting gate netlist of module `\ifu_ic_mem' to `<abc-temp-dir>/input.blif'..
8.23.27. Extracting gate netlist of module `\ifu_ifc_ctl' to `<abc-temp-dir>/input.blif'..
8.23.28. Extracting gate netlist of module `\ifu_mem_ctl' to `<abc-temp-dir>/input.blif'..
8.23.29. Extracting gate netlist of module `\lsu' to `<abc-temp-dir>/input.blif'..
8.23.30. Extracting gate netlist of module `\lsu_addrcheck' to `<abc-temp-dir>/input.blif'..
8.23.31. Extracting gate netlist of module `\lsu_bus_buffer' to `<abc-temp-dir>/input.blif'..
8.23.32. Extracting gate netlist of module `\lsu_bus_intf' to `<abc-temp-dir>/input.blif'..
8.23.33. Extracting gate netlist of module `\lsu_clkdomain' to `<abc-temp-dir>/input.blif'..
8.23.34. Extracting gate netlist of module `\lsu_dccm_ctl' to `<abc-temp-dir>/input.blif'..
8.23.35. Extracting gate netlist of module `\lsu_dccm_mem' to `<abc-temp-dir>/input.blif'..
8.23.36. Extracting gate netlist of module `\lsu_ecc' to `<abc-temp-dir>/input.blif'..
8.23.37. Extracting gate netlist of module `\lsu_lsc_ctl' to `<abc-temp-dir>/input.blif'..
8.23.38. Extracting gate netlist of module `\lsu_stbuf' to `<abc-temp-dir>/input.blif'..
8.23.39. Extracting gate netlist of module `\lsu_trigger' to `<abc-temp-dir>/input.blif'..
8.23.40. Extracting gate netlist of module `\mem' to `<abc-temp-dir>/input.blif'..
8.23.41. Extracting gate netlist of module `\pic_ctrl' to `<abc-temp-dir>/input.blif'..
8.23.42. Extracting gate netlist of module `\ram_2048x39' to `<abc-temp-dir>/input.blif'..
8.23.43. Extracting gate netlist of module `\ram_256x34' to `<abc-temp-dir>/input.blif'..
8.23.44. Extracting gate netlist of module `\ram_64x21' to `<abc-temp-dir>/input.blif'..
8.23.45. Extracting gate netlist of module `\rvbradder' to `<abc-temp-dir>/input.blif'..
8.23.46. Extracting gate netlist of module `\rvbtb_addr_hash' to `<abc-temp-dir>/input.blif'..
8.23.47. Extracting gate netlist of module `\rvbtb_ghr_hash' to `<abc-temp-dir>/input.blif'..
8.23.48. Extracting gate netlist of module `\rvbtb_tag_hash' to `<abc-temp-dir>/input.blif'..
8.23.49. Extracting gate netlist of module `\rvclkhdr' to `<abc-temp-dir>/input.blif'..
8.23.50. Extracting gate netlist of module `\rvdff_WIDTH1' to `<abc-temp-dir>/input.blif'..
8.23.51. Extracting gate netlist of module `\rvdff_WIDTH10' to `<abc-temp-dir>/input.blif'..
8.23.52. Extracting gate netlist of module `\rvdff_WIDTH11' to `<abc-temp-dir>/input.blif'..
8.23.53. Extracting gate netlist of module `\rvdff_WIDTH12' to `<abc-temp-dir>/input.blif'..
8.23.54. Extracting gate netlist of module `\rvdff_WIDTH128' to `<abc-temp-dir>/input.blif'..
8.23.55. Extracting gate netlist of module `\rvdff_WIDTH13' to `<abc-temp-dir>/input.blif'..
8.23.56. Extracting gate netlist of module `\rvdff_WIDTH14' to `<abc-temp-dir>/input.blif'..
8.23.57. Extracting gate netlist of module `\rvdff_WIDTH15' to `<abc-temp-dir>/input.blif'..
8.23.58. Extracting gate netlist of module `\rvdff_WIDTH16' to `<abc-temp-dir>/input.blif'..
8.23.59. Extracting gate netlist of module `\rvdff_WIDTH17' to `<abc-temp-dir>/input.blif'..
8.23.60. Extracting gate netlist of module `\rvdff_WIDTH18' to `<abc-temp-dir>/input.blif'..
8.23.61. Extracting gate netlist of module `\rvdff_WIDTH2' to `<abc-temp-dir>/input.blif'..
8.23.62. Extracting gate netlist of module `\rvdff_WIDTH20' to `<abc-temp-dir>/input.blif'..
8.23.63. Extracting gate netlist of module `\rvdff_WIDTH22' to `<abc-temp-dir>/input.blif'..
8.23.64. Extracting gate netlist of module `\rvdff_WIDTH26' to `<abc-temp-dir>/input.blif'..
8.23.65. Extracting gate netlist of module `\rvdff_WIDTH28' to `<abc-temp-dir>/input.blif'..
8.23.66. Extracting gate netlist of module `\rvdff_WIDTH3' to `<abc-temp-dir>/input.blif'..
8.23.67. Extracting gate netlist of module `\rvdff_WIDTH31' to `<abc-temp-dir>/input.blif'..
8.23.68. Extracting gate netlist of module `\rvdff_WIDTH32' to `<abc-temp-dir>/input.blif'..
8.23.69. Extracting gate netlist of module `\rvdff_WIDTH33' to `<abc-temp-dir>/input.blif'..
8.23.70. Extracting gate netlist of module `\rvdff_WIDTH34' to `<abc-temp-dir>/input.blif'..
8.23.71. Extracting gate netlist of module `\rvdff_WIDTH37' to `<abc-temp-dir>/input.blif'..
8.23.72. Extracting gate netlist of module `\rvdff_WIDTH38' to `<abc-temp-dir>/input.blif'..
8.23.73. Extracting gate netlist of module `\rvdff_WIDTH4' to `<abc-temp-dir>/input.blif'..
8.23.74. Extracting gate netlist of module `\rvdff_WIDTH48' to `<abc-temp-dir>/input.blif'..
8.23.75. Extracting gate netlist of module `\rvdff_WIDTH5' to `<abc-temp-dir>/input.blif'..
8.23.76. Extracting gate netlist of module `\rvdff_WIDTH53' to `<abc-temp-dir>/input.blif'..
8.23.77. Extracting gate netlist of module `\rvdff_WIDTH6' to `<abc-temp-dir>/input.blif'..
8.23.78. Extracting gate netlist of module `\rvdff_WIDTH63' to `<abc-temp-dir>/input.blif'..
8.23.79. Extracting gate netlist of module `\rvdff_WIDTH64' to `<abc-temp-dir>/input.blif'..
8.23.80. Extracting gate netlist of module `\rvdff_WIDTH67' to `<abc-temp-dir>/input.blif'..
8.23.81. Extracting gate netlist of module `\rvdff_WIDTH68' to `<abc-temp-dir>/input.blif'..
8.23.82. Extracting gate netlist of module `\rvdff_WIDTH7' to `<abc-temp-dir>/input.blif'..
8.23.83. Extracting gate netlist of module `\rvdff_WIDTH74' to `<abc-temp-dir>/input.blif'..
8.23.84. Extracting gate netlist of module `\rvdff_WIDTH76' to `<abc-temp-dir>/input.blif'..
8.23.85. Extracting gate netlist of module `\rvdff_WIDTH8' to `<abc-temp-dir>/input.blif'..
8.23.86. Extracting gate netlist of module `\rvdff_WIDTH9' to `<abc-temp-dir>/input.blif'..
8.23.87. Extracting gate netlist of module `\rvdffe_WIDTH12' to `<abc-temp-dir>/input.blif'..
8.23.88. Extracting gate netlist of module `\rvdffe_WIDTH128' to `<abc-temp-dir>/input.blif'..
8.23.89. Extracting gate netlist of module `\rvdffe_WIDTH14' to `<abc-temp-dir>/input.blif'..
8.23.90. Extracting gate netlist of module `\rvdffe_WIDTH16' to `<abc-temp-dir>/input.blif'..
8.23.91. Extracting gate netlist of module `\rvdffe_WIDTH17' to `<abc-temp-dir>/input.blif'..
8.23.92. Extracting gate netlist of module `\rvdffe_WIDTH20' to `<abc-temp-dir>/input.blif'..
8.23.93. Extracting gate netlist of module `\rvdffe_WIDTH22' to `<abc-temp-dir>/input.blif'..
8.23.94. Extracting gate netlist of module `\rvdffe_WIDTH26' to `<abc-temp-dir>/input.blif'..
8.23.95. Extracting gate netlist of module `\rvdffe_WIDTH28' to `<abc-temp-dir>/input.blif'..
8.23.96. Extracting gate netlist of module `\rvdffe_WIDTH31' to `<abc-temp-dir>/input.blif'..
8.23.97. Extracting gate netlist of module `\rvdffe_WIDTH32' to `<abc-temp-dir>/input.blif'..
8.23.98. Extracting gate netlist of module `\rvdffe_WIDTH33' to `<abc-temp-dir>/input.blif'..
8.23.99. Extracting gate netlist of module `\rvdffe_WIDTH37' to `<abc-temp-dir>/input.blif'..
8.23.100. Extracting gate netlist of module `\rvdffe_WIDTH48' to `<abc-temp-dir>/input.blif'..
8.23.101. Extracting gate netlist of module `\rvdffe_WIDTH53' to `<abc-temp-dir>/input.blif'..
8.23.102. Extracting gate netlist of module `\rvdffe_WIDTH63' to `<abc-temp-dir>/input.blif'..
8.23.103. Extracting gate netlist of module `\rvdffe_WIDTH64' to `<abc-temp-dir>/input.blif'..
8.23.104. Extracting gate netlist of module `\rvdffe_WIDTH67' to `<abc-temp-dir>/input.blif'..
8.23.105. Extracting gate netlist of module `\rvdffe_WIDTH68' to `<abc-temp-dir>/input.blif'..
8.23.106. Extracting gate netlist of module `\rvdffe_WIDTH74' to `<abc-temp-dir>/input.blif'..
8.23.107. Extracting gate netlist of module `\rvdffe_WIDTH76' to `<abc-temp-dir>/input.blif'..
8.23.108. Extracting gate netlist of module `\rvdffe_WIDTH8' to `<abc-temp-dir>/input.blif'..
8.23.109. Extracting gate netlist of module `\rvdffe_WIDTH9' to `<abc-temp-dir>/input.blif'..
8.23.110. Extracting gate netlist of module `\rvdffs_WIDTH1' to `<abc-temp-dir>/input.blif'..
8.23.111. Extracting gate netlist of module `\rvdffs_WIDTH11' to `<abc-temp-dir>/input.blif'..
8.23.112. Extracting gate netlist of module `\rvdffs_WIDTH2' to `<abc-temp-dir>/input.blif'..
8.23.113. Extracting gate netlist of module `\rvdffs_WIDTH3' to `<abc-temp-dir>/input.blif'..
8.23.114. Extracting gate netlist of module `\rvdffs_WIDTH32' to `<abc-temp-dir>/input.blif'..
8.23.115. Extracting gate netlist of module `\rvdffs_WIDTH4' to `<abc-temp-dir>/input.blif'..
8.23.116. Extracting gate netlist of module `\rvdffs_WIDTH5' to `<abc-temp-dir>/input.blif'..
8.23.117. Extracting gate netlist of module `\rvdffs_WIDTH6' to `<abc-temp-dir>/input.blif'..
8.23.118. Extracting gate netlist of module `\rvdffs_WIDTH64' to `<abc-temp-dir>/input.blif'..
8.23.119. Extracting gate netlist of module `\rvdffs_WIDTH8' to `<abc-temp-dir>/input.blif'..
8.23.120. Extracting gate netlist of module `\rvdffsc_WIDTH1' to `<abc-temp-dir>/input.blif'..
8.23.121. Extracting gate netlist of module `\rvdffsc_WIDTH2' to `<abc-temp-dir>/input.blif'..
8.23.122. Extracting gate netlist of module `\rvecc_decode' to `<abc-temp-dir>/input.blif'..
8.23.123. Extracting gate netlist of module `\rvecc_encode' to `<abc-temp-dir>/input.blif'..
8.23.124. Extracting gate netlist of module `\rveven_paritycheck' to `<abc-temp-dir>/input.blif'..
8.23.125. Extracting gate netlist of module `\rveven_paritycheck_WIDTH20' to `<abc-temp-dir>/input.blif'..
8.23.126. Extracting gate netlist of module `\rveven_paritygen_WIDTH16' to `<abc-temp-dir>/input.blif'..
8.23.127. Extracting gate netlist of module `\rveven_paritygen_WIDTH20' to `<abc-temp-dir>/input.blif'..
8.23.128. Extracting gate netlist of module `\rvjtag_tap' to `<abc-temp-dir>/input.blif'..
8.23.129. Extracting gate netlist of module `\rvlsadder' to `<abc-temp-dir>/input.blif'..
8.23.130. Extracting gate netlist of module `\rvmaskandmatch' to `<abc-temp-dir>/input.blif'..
8.23.131. Extracting gate netlist of module `\rvrangecheck_f0040000_64' to `<abc-temp-dir>/input.blif'..
8.23.132. Extracting gate netlist of module `\rvrangecheck_f00c0000_32' to `<abc-temp-dir>/input.blif'..
8.23.133. Extracting gate netlist of module `\rvsyncss_WIDTH6' to `<abc-temp-dir>/input.blif'..
8.23.134. Extracting gate netlist of module `\rvsyncss_WIDTH8' to `<abc-temp-dir>/input.blif'..
8.23.135. Extracting gate netlist of module `\rvtwoscomp_WIDTH32' to `<abc-temp-dir>/input.blif'..
8.23.136. Extracting gate netlist of module `\swerv' to `<abc-temp-dir>/input.blif'..
8.23.137. Extracting gate netlist of module `\swerv_wrapper' to `<abc-temp-dir>/input.blif'..
8.24. Executing OPT pass (performing simple optimizations).
8.24.1. Executing OPT_EXPR pass (perform const folding).
8.24.2. Executing OPT_MERGE pass (detect identical cells).
8.24.3. Executing OPT_DFF pass (perform DFF optimizations).
8.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
8.24.5. Finished fast OPT passes.
8.25. Executing HIERARCHY pass (managing design hierarchy).
8.25.1. Analyzing design hierarchy..
8.25.2. Analyzing design hierarchy..
8.26. Printing statistics.
8.27. Executing CHECK pass (checking for obvious problems).
9. Executing TECHMAP pass (map to technology primitives).
9.1. Executing Verilog-2005 frontend: /home/jborg/Data/Research/DLPnR/OpenROAD-flow-scripts/flow/platforms/nangate45/cells_adders.v
9.2. Continuing TECHMAP pass.
10. Executing TECHMAP pass (map to technology primitives).
10.1. Executing Verilog-2005 frontend: /home/jborg/Data/Research/DLPnR/OpenROAD-flow-scripts/tools/install/yosys/bin/../share/yosys/techmap.v
10.2. Continuing TECHMAP pass.
11. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
11.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
abc -script /home/jborg/Data/Research/DLPnR/OpenROAD-flow-scripts/flow/scripts/abc_speed.script -liberty ./objects/nangate45/swerv_wrapper/base/lib/NangateOpenCellLibrary_typical.lib -constr ./objects/nangate45/swerv_wrapper/base/abc.constr -D 3.4
12. Executing ABC pass (technology mapping using ABC).
12.1. Extracting gate netlist of module `\IC_DATA_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_IC_DEPTH8' to `<abc-temp-dir>/input.blif'..
12.1.1. Executing ABC.
12.1.2. Re-integrating ABC results.
12.2. Extracting gate netlist of module `\IC_TAG_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_TAG_DEPTH64' to `<abc-temp-dir>/input.blif'..
12.2.1. Executing ABC.
12.2.2. Re-integrating ABC results.
12.3. Extracting gate netlist of module `\OPENROAD_CLKGATE' to `<abc-temp-dir>/input.blif'..
12.4. Extracting gate netlist of module `\clockhdr' to `<abc-temp-dir>/input.blif'..
12.4.1. Executing ABC.
12.4.2. Re-integrating ABC results.
12.5. Extracting gate netlist of module `\cmp_and_mux_ID_BITS8_INTPRIORITY_BITS4' to `<abc-temp-dir>/input.blif'..
12.5.1. Executing ABC.
12.5.2. Re-integrating ABC results.
12.6. Extracting gate netlist of module `\configurable_gw' to `<abc-temp-dir>/input.blif'..
12.6.1. Executing ABC.
12.6.2. Re-integrating ABC results.
12.7. Extracting gate netlist of module `\dbg' to `<abc-temp-dir>/input.blif'..
12.7.1. Executing ABC.
12.7.2. Re-integrating ABC results.
12.8. Extracting gate netlist of module `\dec' to `<abc-temp-dir>/input.blif'..
12.8.1. Executing ABC.
12.8.2. Re-integrating ABC results.
12.9. Extracting gate netlist of module `\dec_dec_ctl' to `<abc-temp-dir>/input.blif'..
12.9.1. Executing ABC.
12.9.2. Re-integrating ABC results.
12.10. Extracting gate netlist of module `\dec_decode_ctl' to `<abc-temp-dir>/input.blif'..
12.10.1. Executing ABC.
12.10.2. Re-integrating ABC results.
12.11. Extracting gate netlist of module `\dec_gpr_ctl_GPR_BANKS1_GPR_BANKS_LOG21' to `<abc-temp-dir>/input.blif'..
12.11.1. Executing ABC.
12.11.2. Re-integrating ABC results.
12.12. Extracting gate netlist of module `\dec_ib_ctl' to `<abc-temp-dir>/input.blif'..
12.12.1. Executing ABC.
12.12.2. Re-integrating ABC results.
12.13. Extracting gate netlist of module `\dec_tlu_ctl' to `<abc-temp-dir>/input.blif'..
12.13.1. Executing ABC.
12.13.2. Re-integrating ABC results.
12.14. Extracting gate netlist of module `\dec_trigger' to `<abc-temp-dir>/input.blif'..
12.14.1. Executing ABC.
12.14.2. Re-integrating ABC results.
12.15. Extracting gate netlist of module `\dma_ctrl' to `<abc-temp-dir>/input.blif'..
12.15.1. Executing ABC.
12.15.2. Re-integrating ABC results.
12.16. Extracting gate netlist of module `\dmi_jtag_to_core_sync' to `<abc-temp-dir>/input.blif'..
12.16.1. Executing ABC.
12.16.2. Re-integrating ABC results.
12.17. Extracting gate netlist of module `\dmi_wrapper' to `<abc-temp-dir>/input.blif'..
12.18. Extracting gate netlist of module `\exu' to `<abc-temp-dir>/input.blif'..
12.18.1. Executing ABC.
12.18.2. Re-integrating ABC results.
12.19. Extracting gate netlist of module `\exu_alu_ctl' to `<abc-temp-dir>/input.blif'..
12.19.1. Executing ABC.
12.19.2. Re-integrating ABC results.
12.20. Extracting gate netlist of module `\exu_div_ctl' to `<abc-temp-dir>/input.blif'..
12.20.1. Executing ABC.
12.20.2. Re-integrating ABC results.
12.21. Extracting gate netlist of module `\exu_mul_ctl' to `<abc-temp-dir>/input.blif'..
12.21.1. Executing ABC.
12.21.2. Re-integrating ABC results.
12.22. Extracting gate netlist of module `\ifu' to `<abc-temp-dir>/input.blif'..
12.23. Extracting gate netlist of module `\ifu_aln_ctl' to `<abc-temp-dir>/input.blif'..
12.23.1. Executing ABC.
12.23.2. Re-integrating ABC results.
12.24. Extracting gate netlist of module `\ifu_bp_ctl' to `<abc-temp-dir>/input.blif'..
12.24.1. Executing ABC.
12.24.2. Re-integrating ABC results.
12.25. Extracting gate netlist of module `\ifu_compress_ctl' to `<abc-temp-dir>/input.blif'..
12.25.1. Executing ABC.
12.25.2. Re-integrating ABC results.
12.26. Extracting gate netlist of module `\ifu_ic_mem' to `<abc-temp-dir>/input.blif'..
12.27. Extracting gate netlist of module `\ifu_ifc_ctl' to `<abc-temp-dir>/input.blif'..
12.27.1. Executing ABC.
12.27.2. Re-integrating ABC results.
12.28. Extracting gate netlist of module `\ifu_mem_ctl' to `<abc-temp-dir>/input.blif'..
12.28.1. Executing ABC.
12.28.2. Re-integrating ABC results.
12.29. Extracting gate netlist of module `\lsu' to `<abc-temp-dir>/input.blif'..
12.29.1. Executing ABC.
12.29.2. Re-integrating ABC results.
12.30. Extracting gate netlist of module `\lsu_addrcheck' to `<abc-temp-dir>/input.blif'..
12.30.1. Executing ABC.
12.30.2. Re-integrating ABC results.
12.31. Extracting gate netlist of module `\lsu_bus_buffer' to `<abc-temp-dir>/input.blif'..
12.31.1. Executing ABC.
12.31.2. Re-integrating ABC results.
12.32. Extracting gate netlist of module `\lsu_bus_intf' to `<abc-temp-dir>/input.blif'..
12.32.1. Executing ABC.
12.32.2. Re-integrating ABC results.
12.33. Extracting gate netlist of module `\lsu_clkdomain' to `<abc-temp-dir>/input.blif'..
12.33.1. Executing ABC.
12.33.2. Re-integrating ABC results.
12.34. Extracting gate netlist of module `\lsu_dccm_ctl' to `<abc-temp-dir>/input.blif'..
12.34.1. Executing ABC.
12.34.2. Re-integrating ABC results.
12.35. Extracting gate netlist of module `\lsu_dccm_mem' to `<abc-temp-dir>/input.blif'..
12.35.1. Executing ABC.
12.35.2. Re-integrating ABC results.
12.36. Extracting gate netlist of module `\lsu_ecc' to `<abc-temp-dir>/input.blif'..
12.36.1. Executing ABC.
12.36.2. Re-integrating ABC results.
12.37. Extracting gate netlist of module `\lsu_lsc_ctl' to `<abc-temp-dir>/input.blif'..
12.37.1. Executing ABC.
12.37.2. Re-integrating ABC results.
12.38. Extracting gate netlist of module `\lsu_stbuf' to `<abc-temp-dir>/input.blif'..
12.38.1. Executing ABC.
12.38.2. Re-integrating ABC results.
12.39. Extracting gate netlist of module `\lsu_trigger' to `<abc-temp-dir>/input.blif'..
12.39.1. Executing ABC.
12.39.2. Re-integrating ABC results.
12.40. Extracting gate netlist of module `\mem' to `<abc-temp-dir>/input.blif'..
12.41. Extracting gate netlist of module `\pic_ctrl' to `<abc-temp-dir>/input.blif'..
12.41.1. Executing ABC.
12.41.2. Re-integrating ABC results.
12.42. Extracting gate netlist of module `\ram_2048x39' to `<abc-temp-dir>/input.blif'..
12.43. Extracting gate netlist of module `\ram_256x34' to `<abc-temp-dir>/input.blif'..
12.44. Extracting gate netlist of module `\ram_64x21' to `<abc-temp-dir>/input.blif'..
12.45. Extracting gate netlist of module `\rvbradder' to `<abc-temp-dir>/input.blif'..
12.45.1. Executing ABC.
12.45.2. Re-integrating ABC results.
12.46. Extracting gate netlist of module `\rvbtb_addr_hash' to `<abc-temp-dir>/input.blif'..
12.46.1. Executing ABC.
12.46.2. Re-integrating ABC results.
12.47. Extracting gate netlist of module `\rvbtb_ghr_hash' to `<abc-temp-dir>/input.blif'..
12.47.1. Executing ABC.
12.47.2. Re-integrating ABC results.
12.48. Extracting gate netlist of module `\rvbtb_tag_hash' to `<abc-temp-dir>/input.blif'..
12.48.1. Executing ABC.
12.48.2. Re-integrating ABC results.
12.49. Extracting gate netlist of module `\rvclkhdr' to `<abc-temp-dir>/input.blif'..
12.50. Extracting gate netlist of module `\rvdff_WIDTH1' to `<abc-temp-dir>/input.blif'..
12.51. Extracting gate netlist of module `\rvdff_WIDTH10' to `<abc-temp-dir>/input.blif'..
12.52. Extracting gate netlist of module `\rvdff_WIDTH11' to `<abc-temp-dir>/input.blif'..
12.53. Extracting gate netlist of module `\rvdff_WIDTH12' to `<abc-temp-dir>/input.blif'..
12.54. Extracting gate netlist of module `\rvdff_WIDTH128' to `<abc-temp-dir>/input.blif'..
12.55. Extracting gate netlist of module `\rvdff_WIDTH13' to `<abc-temp-dir>/input.blif'..
12.56. Extracting gate netlist of module `\rvdff_WIDTH14' to `<abc-temp-dir>/input.blif'..
12.57. Extracting gate netlist of module `\rvdff_WIDTH15' to `<abc-temp-dir>/input.blif'..
12.58. Extracting gate netlist of module `\rvdff_WIDTH16' to `<abc-temp-dir>/input.blif'..
12.59. Extracting gate netlist of module `\rvdff_WIDTH17' to `<abc-temp-dir>/input.blif'..
12.60. Extracting gate netlist of module `\rvdff_WIDTH18' to `<abc-temp-dir>/input.blif'..
12.61. Extracting gate netlist of module `\rvdff_WIDTH2' to `<abc-temp-dir>/input.blif'..
12.62. Extracting gate netlist of module `\rvdff_WIDTH20' to `<abc-temp-dir>/input.blif'..
12.63. Extracting gate netlist of module `\rvdff_WIDTH22' to `<abc-temp-dir>/input.blif'..
12.64. Extracting gate netlist of module `\rvdff_WIDTH26' to `<abc-temp-dir>/input.blif'..
12.65. Extracting gate netlist of module `\rvdff_WIDTH28' to `<abc-temp-dir>/input.blif'..
12.66. Extracting gate netlist of module `\rvdff_WIDTH3' to `<abc-temp-dir>/input.blif'..
12.67. Extracting gate netlist of module `\rvdff_WIDTH31' to `<abc-temp-dir>/input.blif'..
12.68. Extracting gate netlist of module `\rvdff_WIDTH32' to `<abc-temp-dir>/input.blif'..
12.69. Extracting gate netlist of module `\rvdff_WIDTH33' to `<abc-temp-dir>/input.blif'..
12.70. Extracting gate netlist of module `\rvdff_WIDTH34' to `<abc-temp-dir>/input.blif'..
12.71. Extracting gate netlist of module `\rvdff_WIDTH37' to `<abc-temp-dir>/input.blif'..
12.72. Extracting gate netlist of module `\rvdff_WIDTH38' to `<abc-temp-dir>/input.blif'..
12.73. Extracting gate netlist of module `\rvdff_WIDTH4' to `<abc-temp-dir>/input.blif'..
12.74. Extracting gate netlist of module `\rvdff_WIDTH48' to `<abc-temp-dir>/input.blif'..
12.75. Extracting gate netlist of module `\rvdff_WIDTH5' to `<abc-temp-dir>/input.blif'..
12.76. Extracting gate netlist of module `\rvdff_WIDTH53' to `<abc-temp-dir>/input.blif'..
12.77. Extracting gate netlist of module `\rvdff_WIDTH6' to `<abc-temp-dir>/input.blif'..
12.78. Extracting gate netlist of module `\rvdff_WIDTH63' to `<abc-temp-dir>/input.blif'..
12.79. Extracting gate netlist of module `\rvdff_WIDTH64' to `<abc-temp-dir>/input.blif'..
12.80. Extracting gate netlist of module `\rvdff_WIDTH67' to `<abc-temp-dir>/input.blif'..
12.81. Extracting gate netlist of module `\rvdff_WIDTH68' to `<abc-temp-dir>/input.blif'..
12.82. Extracting gate netlist of module `\rvdff_WIDTH7' to `<abc-temp-dir>/input.blif'..
12.83. Extracting gate netlist of module `\rvdff_WIDTH74' to `<abc-temp-dir>/input.blif'..
12.84. Extracting gate netlist of module `\rvdff_WIDTH76' to `<abc-temp-dir>/input.blif'..
12.85. Extracting gate netlist of module `\rvdff_WIDTH8' to `<abc-temp-dir>/input.blif'..
12.86. Extracting gate netlist of module `\rvdff_WIDTH9' to `<abc-temp-dir>/input.blif'..
12.87. Extracting gate netlist of module `\rvdffe_WIDTH12' to `<abc-temp-dir>/input.blif'..
12.88. Extracting gate netlist of module `\rvdffe_WIDTH128' to `<abc-temp-dir>/input.blif'..
12.89. Extracting gate netlist of module `\rvdffe_WIDTH14' to `<abc-temp-dir>/input.blif'..
12.90. Extracting gate netlist of module `\rvdffe_WIDTH16' to `<abc-temp-dir>/input.blif'..
12.91. Extracting gate netlist of module `\rvdffe_WIDTH17' to `<abc-temp-dir>/input.blif'..
12.92. Extracting gate netlist of module `\rvdffe_WIDTH20' to `<abc-temp-dir>/input.blif'..
12.93. Extracting gate netlist of module `\rvdffe_WIDTH22' to `<abc-temp-dir>/input.blif'..
12.94. Extracting gate netlist of module `\rvdffe_WIDTH26' to `<abc-temp-dir>/input.blif'..
12.95. Extracting gate netlist of module `\rvdffe_WIDTH28' to `<abc-temp-dir>/input.blif'..
12.96. Extracting gate netlist of module `\rvdffe_WIDTH31' to `<abc-temp-dir>/input.blif'..
12.97. Extracting gate netlist of module `\rvdffe_WIDTH32' to `<abc-temp-dir>/input.blif'..
12.98. Extracting gate netlist of module `\rvdffe_WIDTH33' to `<abc-temp-dir>/input.blif'..
12.99. Extracting gate netlist of module `\rvdffe_WIDTH37' to `<abc-temp-dir>/input.blif'..
12.100. Extracting gate netlist of module `\rvdffe_WIDTH48' to `<abc-temp-dir>/input.blif'..
12.101. Extracting gate netlist of module `\rvdffe_WIDTH53' to `<abc-temp-dir>/input.blif'..
12.102. Extracting gate netlist of module `\rvdffe_WIDTH63' to `<abc-temp-dir>/input.blif'..
12.103. Extracting gate netlist of module `\rvdffe_WIDTH64' to `<abc-temp-dir>/input.blif'..
12.104. Extracting gate netlist of module `\rvdffe_WIDTH67' to `<abc-temp-dir>/input.blif'..
12.105. Extracting gate netlist of module `\rvdffe_WIDTH68' to `<abc-temp-dir>/input.blif'..
12.106. Extracting gate netlist of module `\rvdffe_WIDTH74' to `<abc-temp-dir>/input.blif'..
12.107. Extracting gate netlist of module `\rvdffe_WIDTH76' to `<abc-temp-dir>/input.blif'..
12.108. Extracting gate netlist of module `\rvdffe_WIDTH8' to `<abc-temp-dir>/input.blif'..
12.109. Extracting gate netlist of module `\rvdffe_WIDTH9' to `<abc-temp-dir>/input.blif'..
12.110. Extracting gate netlist of module `\rvdffs_WIDTH1' to `<abc-temp-dir>/input.blif'..
12.110.1. Executing ABC.
12.110.2. Re-integrating ABC results.
12.111. Extracting gate netlist of module `\rvdffs_WIDTH11' to `<abc-temp-dir>/input.blif'..
12.111.1. Executing ABC.
12.111.2. Re-integrating ABC results.
12.112. Extracting gate netlist of module `\rvdffs_WIDTH2' to `<abc-temp-dir>/input.blif'..
12.112.1. Executing ABC.
12.112.2. Re-integrating ABC results.
12.113. Extracting gate netlist of module `\rvdffs_WIDTH3' to `<abc-temp-dir>/input.blif'..
12.113.1. Executing ABC.
12.113.2. Re-integrating ABC results.
12.114. Extracting gate netlist of module `\rvdffs_WIDTH32' to `<abc-temp-dir>/input.blif'..
12.114.1. Executing ABC.
12.114.2. Re-integrating ABC results.
12.115. Extracting gate netlist of module `\rvdffs_WIDTH4' to `<abc-temp-dir>/input.blif'..
12.115.1. Executing ABC.
12.115.2. Re-integrating ABC results.
12.116. Extracting gate netlist of module `\rvdffs_WIDTH5' to `<abc-temp-dir>/input.blif'..
12.116.1. Executing ABC.
12.116.2. Re-integrating ABC results.
12.117. Extracting gate netlist of module `\rvdffs_WIDTH6' to `<abc-temp-dir>/input.blif'..
12.117.1. Executing ABC.
12.117.2. Re-integrating ABC results.
12.118. Extracting gate netlist of module `\rvdffs_WIDTH64' to `<abc-temp-dir>/input.blif'..
12.118.1. Executing ABC.
12.118.2. Re-integrating ABC results.
12.119. Extracting gate netlist of module `\rvdffs_WIDTH8' to `<abc-temp-dir>/input.blif'..
12.119.1. Executing ABC.
12.119.2. Re-integrating ABC results.
12.120. Extracting gate netlist of module `\rvdffsc_WIDTH1' to `<abc-temp-dir>/input.blif'..
12.120.1. Executing ABC.
12.120.2. Re-integrating ABC results.
12.121. Extracting gate netlist of module `\rvdffsc_WIDTH2' to `<abc-temp-dir>/input.blif'..
12.121.1. Executing ABC.
12.121.2. Re-integrating ABC results.
12.122. Extracting gate netlist of module `\rvecc_decode' to `<abc-temp-dir>/input.blif'..
12.122.1. Executing ABC.
12.122.2. Re-integrating ABC results.
12.123. Extracting gate netlist of module `\rvecc_encode' to `<abc-temp-dir>/input.blif'..
12.123.1. Executing ABC.
12.123.2. Re-integrating ABC results.
12.124. Extracting gate netlist of module `\rveven_paritycheck' to `<abc-temp-dir>/input.blif'..
12.124.1. Executing ABC.
12.124.2. Re-integrating ABC results.
12.125. Extracting gate netlist of module `\rveven_paritycheck_WIDTH20' to `<abc-temp-dir>/input.blif'..
12.125.1. Executing ABC.
12.125.2. Re-integrating ABC results.
12.126. Extracting gate netlist of module `\rveven_paritygen_WIDTH16' to `<abc-temp-dir>/input.blif'..
12.126.1. Executing ABC.
12.126.2. Re-integrating ABC results.
12.127. Extracting gate netlist of module `\rveven_paritygen_WIDTH20' to `<abc-temp-dir>/input.blif'..
12.127.1. Executing ABC.
12.127.2. Re-integrating ABC results.
12.128. Extracting gate netlist of module `\rvjtag_tap' to `<abc-temp-dir>/input.blif'..
12.128.1. Executing ABC.
12.128.2. Re-integrating ABC results.
12.129. Extracting gate netlist of module `\rvlsadder' to `<abc-temp-dir>/input.blif'..
12.129.1. Executing ABC.
12.129.2. Re-integrating ABC results.
12.130. Extracting gate netlist of module `\rvmaskandmatch' to `<abc-temp-dir>/input.blif'..
12.130.1. Executing ABC.
12.130.2. Re-integrating ABC results.
12.131. Extracting gate netlist of module `\rvrangecheck_f0040000_64' to `<abc-temp-dir>/input.blif'..
12.131.1. Executing ABC.
12.131.2. Re-integrating ABC results.
12.132. Extracting gate netlist of module `\rvrangecheck_f00c0000_32' to `<abc-temp-dir>/input.blif'..
12.132.1. Executing ABC.
12.132.2. Re-integrating ABC results.
12.133. Extracting gate netlist of module `\rvsyncss_WIDTH6' to `<abc-temp-dir>/input.blif'..
12.134. Extracting gate netlist of module `\rvsyncss_WIDTH8' to `<abc-temp-dir>/input.blif'..
12.135. Extracting gate netlist of module `\rvtwoscomp_WIDTH32' to `<abc-temp-dir>/input.blif'..
12.135.1. Executing ABC.
12.135.2. Re-integrating ABC results.
12.136. Extracting gate netlist of module `\swerv' to `<abc-temp-dir>/input.blif'..
12.136.1. Executing ABC.
12.136.2. Re-integrating ABC results.
12.137. Extracting gate netlist of module `\swerv_wrapper' to `<abc-temp-dir>/input.blif'..
13. Printing statistics.
Ungroup modules of size 10000
14. Executing HIERARCHY pass (managing design hierarchy).
14.1. Analyzing design hierarchy..
14.2. Analyzing design hierarchy..
Found module swerv_wrapper
Found module mem
Found module ifu_ic_mem
Found module IC_DATA_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_IC_DEPTH8
Found module ram_256x34
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH5
Found module IC_TAG_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_TAG_DEPTH64
Found module ram_64x21
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH20
Found module rvdff_WIDTH4
Found module rveven_paritycheck_WIDTH20
Found module rveven_paritygen_WIDTH20
Found module lsu_dccm_mem
Found module ram_2048x39
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdffs_WIDTH3
Found module rvdff_WIDTH3
Found module swerv
Found module dbg
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH1
Found module rvdff_WIDTH2
Found module rvdff_WIDTH3
Found module rvdff_WIDTH64
Found module rvdffe_WIDTH32
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH32
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module rvdffs_WIDTH3
Found module rvdff_WIDTH3
Found module rvdffs_WIDTH32
Found module rvdff_WIDTH32
Found module rvdffs_WIDTH4
Found module rvdff_WIDTH4
Found module rvdffs_WIDTH5
Found module rvdff_WIDTH5
Found module rvdffsc_WIDTH1
Found module rvdff_WIDTH1
Found module dec
Found module dec_decode_ctl
Found module dec_dec_ctl
Found module rvbradder
Found module rvdff_WIDTH1
Found module rvdff_WIDTH10
Found module rvdff_WIDTH2
Found module rvdffe_WIDTH12
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH12
Found module rvdffe_WIDTH26
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH26
Found module rvdffe_WIDTH31
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH31
Found module rvdffe_WIDTH32
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH32
Found module rvdffe_WIDTH37
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH37
Found module rvdffe_WIDTH67
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH67
Found module rvdffe_WIDTH9
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH9
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module rvdffs_WIDTH2
Found module rvdff_WIDTH2
Found module rvdffs_WIDTH3
Found module rvdff_WIDTH3
Found module rvdffs_WIDTH4
Found module rvdff_WIDTH4
Found module rvdffs_WIDTH5
Found module rvdff_WIDTH5
Found module dec_gpr_ctl_GPR_BANKS1_GPR_BANKS_LOG21
Found module rvdffe_WIDTH32
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH32
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module dec_ib_ctl
Found module rvdff_WIDTH1
Found module rvdff_WIDTH4
Found module rvdffe_WIDTH16
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH16
Found module rvdffe_WIDTH32
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH32
Found module rvdffe_WIDTH37
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH37
Found module rvdffe_WIDTH68
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH68
Found module dec_tlu_ctl
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH1
Found module rvdff_WIDTH10
Found module rvdff_WIDTH11
Found module rvdff_WIDTH15
Found module rvdff_WIDTH18
Found module rvdff_WIDTH2
Found module rvdff_WIDTH22
Found module rvdff_WIDTH31
Found module rvdff_WIDTH32
Found module rvdff_WIDTH34
Found module rvdff_WIDTH38
Found module rvdff_WIDTH4
Found module rvdff_WIDTH8
Found module rvdffe_WIDTH14
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH14
Found module rvdffe_WIDTH17
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH17
Found module rvdffe_WIDTH22
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH22
Found module rvdffe_WIDTH31
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH31
Found module rvdffe_WIDTH32
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH32
Found module rvdffe_WIDTH8
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH8
Found module rvdffe_WIDTH9
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH9
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module rvdffs_WIDTH2
Found module rvdff_WIDTH2
Found module rvdffs_WIDTH6
Found module rvdff_WIDTH6
Found module rvsyncss_WIDTH6
Found module rvdff_WIDTH6
Found module dec_trigger
Found module rvmaskandmatch
Found module dma_ctrl
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH1
Found module rvdff_WIDTH2
Found module rvdffe_WIDTH32
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH32
Found module rvdffe_WIDTH64
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH64
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module rvdffs_WIDTH2
Found module rvdff_WIDTH2
Found module rvdffs_WIDTH3
Found module rvdff_WIDTH3
Found module rvdffs_WIDTH8
Found module rvdff_WIDTH8
Found module rvdffsc_WIDTH1
Found module rvdff_WIDTH1
Found module rvdffsc_WIDTH2
Found module rvdff_WIDTH2
Found module rvrangecheck_f0040000_64
Found module rvrangecheck_f00c0000_32
Found module dmi_wrapper
Found module dmi_jtag_to_core_sync
Found module rvjtag_tap
Found module exu
Found module exu_alu_ctl
Found module rvbradder
Found module rvdffe_WIDTH12
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH12
Found module rvdffe_WIDTH31
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH31
Found module rvdffe_WIDTH32
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH32
Found module rvdffe_WIDTH74
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH74
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module exu_div_ctl
Found module rvdff_WIDTH1
Found module rvdff_WIDTH5
Found module rvdff_WIDTH6
Found module rvdffe_WIDTH33
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH33
Found module rvdffs_WIDTH4
Found module rvdff_WIDTH4
Found module rvtwoscomp_WIDTH32
Found module exu_mul_ctl
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH1
Found module rvdff_WIDTH32
Found module rvdff_WIDTH33
Found module rvdff_WIDTH64
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module rvdff_WIDTH1
Found module rvdff_WIDTH2
Found module rvdff_WIDTH5
Found module rvdffe_WIDTH20
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH20
Found module rvdffe_WIDTH31
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH31
Found module rvdffe_WIDTH32
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH32
Found module rvdffe_WIDTH33
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH33
Found module rvdffe_WIDTH63
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH63
Found module rvdffe_WIDTH74
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH74
Found module rvdffe_WIDTH76
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH76
Found module rvdffs_WIDTH2
Found module rvdff_WIDTH2
Found module rvdffs_WIDTH5
Found module rvdff_WIDTH5
Found module ifu
Found module ifu_aln_ctl
Found module ifu_compress_ctl
Found module rvbtb_addr_hash
Found module rvbtb_tag_hash
Found module rvdff_WIDTH1
Found module rvdff_WIDTH2
Found module rvdff_WIDTH3
Found module rvdff_WIDTH8
Found module rvdffe_WIDTH128
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH128
Found module rvdffe_WIDTH16
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH16
Found module rvdffe_WIDTH31
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH31
Found module rvdffe_WIDTH48
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH48
Found module rvdffe_WIDTH53
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH53
Found module rvdffe_WIDTH8
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH8
Found module rveven_paritycheck
Found module ifu_bp_ctl
Found module rvbradder
Found module rvbtb_addr_hash
Found module rvbtb_ghr_hash
Found module rvbtb_tag_hash
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH13
Found module rvdff_WIDTH5
Found module rvdff_WIDTH9
Found module rvdffe_WIDTH16
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH16
Found module rvdffe_WIDTH26
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH26
Found module rvdffe_WIDTH28
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH28
Found module rvdffe_WIDTH31
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH31
Found module rvdffs_WIDTH2
Found module rvdff_WIDTH2
Found module ifu_ifc_ctl
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH2
Found module rvdff_WIDTH3
Found module rvdff_WIDTH31
Found module rvdff_WIDTH5
Found module rvdffe_WIDTH31
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH31
Found module ifu_mem_ctl
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH1
Found module rvdff_WIDTH11
Found module rvdff_WIDTH2
Found module rvdff_WIDTH3
Found module rvdff_WIDTH31
Found module rvdff_WIDTH34
Found module rvdff_WIDTH4
Found module rvdff_WIDTH5
Found module rvdff_WIDTH6
Found module rvdff_WIDTH64
Found module rvdff_WIDTH9
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module rvdffs_WIDTH11
Found module rvdff_WIDTH11
Found module rvdffs_WIDTH3
Found module rvdff_WIDTH3
Found module rveven_paritygen_WIDTH16
Found module lsu
Found module lsu_bus_intf
Found module lsu_bus_buffer
Found module rvdff_WIDTH1
Found module rvdff_WIDTH2
Found module rvdff_WIDTH3
Found module rvdff_WIDTH32
Found module rvdff_WIDTH4
Found module rvdff_WIDTH8
Found module rvdffe_WIDTH32
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH32
Found module rvdffe_WIDTH64
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH64
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module rvdffs_WIDTH2
Found module rvdff_WIDTH2
Found module rvdffs_WIDTH3
Found module rvdff_WIDTH3
Found module rvdffs_WIDTH4
Found module rvdff_WIDTH4
Found module rvdffs_WIDTH8
Found module rvdff_WIDTH8
Found module rvdffsc_WIDTH1
Found module rvdff_WIDTH1
Found module rvdff_WIDTH1
Found module rvdff_WIDTH32
Found module rvdff_WIDTH4
Found module lsu_clkdomain
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH1
Found module lsu_dccm_ctl
Found module rvdff_WIDTH1
Found module rvdff_WIDTH32
Found module rvdff_WIDTH7
Found module lsu_ecc
Found module rvecc_decode
Found module rvecc_encode
Found module lsu_lsc_ctl
Found module lsu_addrcheck
Found module rvdff_WIDTH1
Found module rvrangecheck_f0040000_64
Found module rvrangecheck_f00c0000_32
Found module rvdff_WIDTH1
Found module rvdff_WIDTH12
Found module rvdff_WIDTH18
Found module rvdff_WIDTH32
Found module rvdff_WIDTH64
Found module rvdffs_WIDTH64
Found module rvdff_WIDTH64
Found module rvlsadder
Found module lsu_stbuf
Found module rvdff_WIDTH1
Found module rvdff_WIDTH3
Found module rvdff_WIDTH32
Found module rvdff_WIDTH4
Found module rvdffe_WIDTH16
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH16
Found module rvdffe_WIDTH32
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH32
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module rvdffs_WIDTH3
Found module rvdff_WIDTH3
Found module rvdffs_WIDTH4
Found module rvdff_WIDTH4
Found module rvdffsc_WIDTH1
Found module rvdff_WIDTH1
Found module lsu_trigger
Found module rvmaskandmatch
Found module rvdff_WIDTH1
Found module pic_ctrl
Found module cmp_and_mux_ID_BITS8_INTPRIORITY_BITS4
Found module configurable_gw
Found module rvdff_WIDTH1
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
Found module rvdff_WIDTH1
Found module rvdff_WIDTH32
Found module rvdff_WIDTH4
Found module rvdff_WIDTH8
Found module rvdffs_WIDTH1
Found module rvdff_WIDTH1
Found module rvdffs_WIDTH2
Found module rvdff_WIDTH2
Found module rvdffs_WIDTH4
Found module rvdff_WIDTH4
Found module rvsyncss_WIDTH8
Found module rvdff_WIDTH8
Found module rvclkhdr
Found module clockhdr
Found module OPENROAD_CLKGATE
15. Printing statistics.
Area of module \swerv_wrapper is 665337.288000
Preserving hierarchical module: \swerv_wrapper
16. Printing statistics.
Area of module \mem is 474485.746000
Preserving hierarchical module: \mem
17. Printing statistics.
Area of module \ifu_ic_mem is 109252.850000
Preserving hierarchical module: \ifu_ic_mem
18. Printing statistics.
Area of module \IC_DATA_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_IC_DEPTH8 is 104789.636000
Preserving hierarchical module: \IC_DATA_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_IC_DEPTH8
19. Printing statistics.
Area of module \ram_256x34 is 6476.036000
20. Printing statistics.
Area of module \rvclkhdr is 1.330000
21. Printing statistics.
Area of module \clockhdr is 1.330000
22. Printing statistics.
23. Printing statistics.
Area of module \rvdff_WIDTH5 is 26.600000
24. Printing statistics.
Area of module \IC_TAG_ICACHE_TAG_HIGH12_ICACHE_TAG_LOW6_ICACHE_TAG_DEPTH64 is 4463.214000
25. Printing statistics.
Area of module \ram_64x21 is 949.354000
26. Printing statistics.
Area of module \rvclkhdr is 1.330000
27. Printing statistics.
Area of module \clockhdr is 1.330000
28. Printing statistics.
29. Printing statistics.
Area of module \rvdff_WIDTH20 is 106.400000
30. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
31. Printing statistics.
Area of module \rveven_paritycheck_WIDTH20 is 34.846000
32. Printing statistics.
Area of module \rveven_paritygen_WIDTH20 is 40.964000
33. Printing statistics.
Area of module \lsu_dccm_mem is 365232.896000
Preserving hierarchical module: \lsu_dccm_mem
34. Printing statistics.
Area of module \ram_2048x39 is 45478.818000
Preserving hierarchical module: \ram_2048x39
35. Printing statistics.
Area of module \rvclkhdr is 1.330000
36. Printing statistics.
Area of module \clockhdr is 1.330000
37. Printing statistics.
38. Printing statistics.
Area of module \rvdffs_WIDTH3 is 21.546000
39. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
40. Printing statistics.
Area of module \swerv is 190851.542000
Preserving hierarchical module: \swerv
41. Printing statistics.
Area of module \dbg is 3466.778000
42. Printing statistics.
Area of module \rvclkhdr is 1.330000
43. Printing statistics.
Area of module \clockhdr is 1.330000
44. Printing statistics.
45. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
46. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
47. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
48. Printing statistics.
Area of module \rvdff_WIDTH64 is 340.480000
49. Printing statistics.
Area of module \rvdffe_WIDTH32 is 171.570000
50. Printing statistics.
Area of module \rvclkhdr is 1.330000
51. Printing statistics.
Area of module \clockhdr is 1.330000
52. Printing statistics.
53. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
54. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
55. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
56. Printing statistics.
Area of module \rvdffs_WIDTH3 is 21.546000
57. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
58. Printing statistics.
Area of module \rvdffs_WIDTH32 is 242.060000
59. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
60. Printing statistics.
Area of module \rvdffs_WIDTH4 is 30.590000
61. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
62. Printing statistics.
Area of module \rvdffs_WIDTH5 is 37.772000
63. Printing statistics.
Area of module \rvdff_WIDTH5 is 26.600000
64. Printing statistics.
Area of module \rvdffsc_WIDTH1 is 9.044000
65. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
66. Printing statistics.
Area of module \dec is 56023.324000
Preserving hierarchical module: \dec
67. Printing statistics.
Area of module \dec_decode_ctl is 18729.592000
Preserving hierarchical module: \dec_decode_ctl
68. Printing statistics.
Area of module \dec_dec_ctl is 196.042000
69. Printing statistics.
Area of module \rvbradder is 287.546000
70. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
71. Printing statistics.
Area of module \rvdff_WIDTH10 is 53.200000
72. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
73. Printing statistics.
Area of module \rvdffe_WIDTH12 is 65.170000
74. Printing statistics.
Area of module \rvclkhdr is 1.330000
75. Printing statistics.
Area of module \clockhdr is 1.330000
76. Printing statistics.
77. Printing statistics.
Area of module \rvdff_WIDTH12 is 63.840000
78. Printing statistics.
Area of module \rvdffe_WIDTH26 is 139.650000
79. Printing statistics.
Area of module \rvclkhdr is 1.330000
80. Printing statistics.
Area of module \clockhdr is 1.330000
81. Printing statistics.
82. Printing statistics.
Area of module \rvdff_WIDTH26 is 138.320000
83. Printing statistics.
Area of module \rvdffe_WIDTH31 is 166.250000
84. Printing statistics.
Area of module \rvclkhdr is 1.330000
85. Printing statistics.
Area of module \clockhdr is 1.330000
86. Printing statistics.
87. Printing statistics.
Area of module \rvdff_WIDTH31 is 164.920000
88. Printing statistics.
Area of module \rvdffe_WIDTH32 is 171.570000
89. Printing statistics.
Area of module \rvclkhdr is 1.330000
90. Printing statistics.
Area of module \clockhdr is 1.330000
91. Printing statistics.
92. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
93. Printing statistics.
Area of module \rvdffe_WIDTH37 is 198.170000
94. Printing statistics.
Area of module \rvclkhdr is 1.330000
95. Printing statistics.
Area of module \clockhdr is 1.330000
96. Printing statistics.
97. Printing statistics.
Area of module \rvdff_WIDTH37 is 196.840000
98. Printing statistics.
Area of module \rvdffe_WIDTH67 is 357.770000
99. Printing statistics.
Area of module \rvclkhdr is 1.330000
100. Printing statistics.
Area of module \clockhdr is 1.330000
101. Printing statistics.
102. Printing statistics.
Area of module \rvdff_WIDTH67 is 356.440000
103. Printing statistics.
Area of module \rvdffe_WIDTH9 is 49.210000
104. Printing statistics.
Area of module \rvclkhdr is 1.330000
105. Printing statistics.
Area of module \clockhdr is 1.330000
106. Printing statistics.
107. Printing statistics.
Area of module \rvdff_WIDTH9 is 47.880000
108. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
109. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
110. Printing statistics.
Area of module \rvdffs_WIDTH2 is 14.364000
111. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
112. Printing statistics.
Area of module \rvdffs_WIDTH3 is 21.546000
113. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
114. Printing statistics.
Area of module \rvdffs_WIDTH4 is 30.590000
115. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
116. Printing statistics.
Area of module \rvdffs_WIDTH5 is 37.772000
117. Printing statistics.
Area of module \rvdff_WIDTH5 is 26.600000
118. Printing statistics.
Area of module \dec_gpr_ctl_GPR_BANKS1_GPR_BANKS_LOG21 is 14730.282000
Preserving hierarchical module: \dec_gpr_ctl_GPR_BANKS1_GPR_BANKS_LOG21
119. Printing statistics.
Area of module \rvdffe_WIDTH32 is 171.570000
120. Printing statistics.
Area of module \rvclkhdr is 1.330000
121. Printing statistics.
Area of module \clockhdr is 1.330000
122. Printing statistics.
123. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
124. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
125. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
126. Printing statistics.
Area of module \dec_ib_ctl is 5418.686000
127. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
128. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
129. Printing statistics.
Area of module \rvdffe_WIDTH16 is 86.450000
130. Printing statistics.
Area of module \rvclkhdr is 1.330000
131. Printing statistics.
Area of module \clockhdr is 1.330000
132. Printing statistics.
133. Printing statistics.
Area of module \rvdff_WIDTH16 is 85.120000
134. Printing statistics.
Area of module \rvdffe_WIDTH32 is 171.570000
135. Printing statistics.
Area of module \rvclkhdr is 1.330000
136. Printing statistics.
Area of module \clockhdr is 1.330000
137. Printing statistics.
138. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
139. Printing statistics.
Area of module \rvdffe_WIDTH37 is 198.170000
140. Printing statistics.
Area of module \rvclkhdr is 1.330000
141. Printing statistics.
Area of module \clockhdr is 1.330000
142. Printing statistics.
143. Printing statistics.
Area of module \rvdff_WIDTH37 is 196.840000
144. Printing statistics.
Area of module \rvdffe_WIDTH68 is 363.090000
145. Printing statistics.
Area of module \rvclkhdr is 1.330000
146. Printing statistics.
Area of module \clockhdr is 1.330000
147. Printing statistics.
148. Printing statistics.
Area of module \rvdff_WIDTH68 is 361.760000
149. Printing statistics.
Area of module \dec_tlu_ctl is 14865.410000
Preserving hierarchical module: \dec_tlu_ctl
150. Printing statistics.
Area of module \rvclkhdr is 1.330000
151. Printing statistics.
Area of module \clockhdr is 1.330000
152. Printing statistics.
153. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
154. Printing statistics.
Area of module \rvdff_WIDTH10 is 53.200000
155. Printing statistics.
Area of module \rvdff_WIDTH11 is 58.520000
156. Printing statistics.
Area of module \rvdff_WIDTH15 is 79.800000
157. Printing statistics.
Area of module \rvdff_WIDTH18 is 95.760000
158. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
159. Printing statistics.
Area of module \rvdff_WIDTH22 is 117.040000
160. Printing statistics.
Area of module \rvdff_WIDTH31 is 164.920000
161. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
162. Printing statistics.
Area of module \rvdff_WIDTH34 is 180.880000
163. Printing statistics.
Area of module \rvdff_WIDTH38 is 202.160000
164. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
165. Printing statistics.
Area of module \rvdff_WIDTH8 is 42.560000
166. Printing statistics.
Area of module \rvdffe_WIDTH14 is 75.810000
167. Printing statistics.
Area of module \rvclkhdr is 1.330000
168. Printing statistics.
Area of module \clockhdr is 1.330000
169. Printing statistics.
170. Printing statistics.
Area of module \rvdff_WIDTH14 is 74.480000
171. Printing statistics.
Area of module \rvdffe_WIDTH17 is 91.770000
172. Printing statistics.
Area of module \rvclkhdr is 1.330000
173. Printing statistics.
Area of module \clockhdr is 1.330000
174. Printing statistics.
175. Printing statistics.
Area of module \rvdff_WIDTH17 is 90.440000
176. Printing statistics.
Area of module \rvdffe_WIDTH22 is 118.370000
177. Printing statistics.
Area of module \rvclkhdr is 1.330000
178. Printing statistics.
Area of module \clockhdr is 1.330000
179. Printing statistics.
180. Printing statistics.
Area of module \rvdff_WIDTH22 is 117.040000
181. Printing statistics.
Area of module \rvdffe_WIDTH31 is 166.250000
182. Printing statistics.
Area of module \rvclkhdr is 1.330000
183. Printing statistics.
Area of module \clockhdr is 1.330000
184. Printing statistics.
185. Printing statistics.
Area of module \rvdff_WIDTH31 is 164.920000
186. Printing statistics.
Area of module \rvdffe_WIDTH32 is 171.570000
187. Printing statistics.
Area of module \rvclkhdr is 1.330000
188. Printing statistics.
Area of module \clockhdr is 1.330000
189. Printing statistics.
190. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
191. Printing statistics.
Area of module \rvdffe_WIDTH8 is 43.890000
192. Printing statistics.
Area of module \rvclkhdr is 1.330000
193. Printing statistics.
Area of module \clockhdr is 1.330000
194. Printing statistics.
195. Printing statistics.
Area of module \rvdff_WIDTH8 is 42.560000
196. Printing statistics.
Area of module \rvdffe_WIDTH9 is 49.210000
197. Printing statistics.
Area of module \rvclkhdr is 1.330000
198. Printing statistics.
Area of module \clockhdr is 1.330000
199. Printing statistics.
200. Printing statistics.
Area of module \rvdff_WIDTH9 is 47.880000
201. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
202. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
203. Printing statistics.
Area of module \rvdffs_WIDTH2 is 14.364000
204. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
205. Printing statistics.
Area of module \rvdffs_WIDTH6 is 44.954000
206. Printing statistics.
Area of module \rvdff_WIDTH6 is 31.920000
207. Printing statistics.
Area of module \rvsyncss_WIDTH6 is 63.840000
208. Printing statistics.
Area of module \rvdff_WIDTH6 is 31.920000
209. Printing statistics.
Area of module \dec_trigger is 2276.694000
210. Printing statistics.
Area of module \rvmaskandmatch is 224.238000
211. Printing statistics.
Area of module \dma_ctrl is 6356.336000
212. Printing statistics.
Area of module \rvclkhdr is 1.330000
213. Printing statistics.
Area of module \clockhdr is 1.330000
214. Printing statistics.
215. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
216. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
217. Printing statistics.
Area of module \rvdffe_WIDTH32 is 171.570000
218. Printing statistics.
Area of module \rvclkhdr is 1.330000
219. Printing statistics.
Area of module \clockhdr is 1.330000
220. Printing statistics.
221. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
222. Printing statistics.
Area of module \rvdffe_WIDTH64 is 341.810000
223. Printing statistics.
Area of module \rvclkhdr is 1.330000
224. Printing statistics.
Area of module \clockhdr is 1.330000
225. Printing statistics.
226. Printing statistics.
Area of module \rvdff_WIDTH64 is 340.480000
227. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
228. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
229. Printing statistics.
Area of module \rvdffs_WIDTH2 is 14.364000
230. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
231. Printing statistics.
Area of module \rvdffs_WIDTH3 is 21.546000
232. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
233. Printing statistics.
Area of module \rvdffs_WIDTH8 is 59.318000
234. Printing statistics.
Area of module \rvdff_WIDTH8 is 42.560000
235. Printing statistics.
Area of module \rvdffsc_WIDTH1 is 9.044000
236. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
237. Printing statistics.
Area of module \rvdffsc_WIDTH2 is 17.556000
238. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
239. Printing statistics.
Area of module \rvrangecheck_f0040000_64 is 11.172000
240. Printing statistics.
Area of module \rvrangecheck_f00c0000_32 is 13.566000
241. Printing statistics.
Area of module \dmi_wrapper is 970.102000
242. Printing statistics.
Area of module \dmi_jtag_to_core_sync is 36.176000
243. Printing statistics.
Area of module \rvjtag_tap is 933.926000
244. Printing statistics.
Area of module \exu is 40770.352000
Preserving hierarchical module: \exu
245. Printing statistics.
Area of module \exu_alu_ctl is 3491.782000
246. Printing statistics.
Area of module \rvbradder is 287.546000
247. Printing statistics.
Area of module \rvdffe_WIDTH12 is 65.170000
248. Printing statistics.
Area of module \rvclkhdr is 1.330000
249. Printing statistics.
Area of module \clockhdr is 1.330000
250. Printing statistics.
251. Printing statistics.
Area of module \rvdff_WIDTH12 is 63.840000
252. Printing statistics.
Area of module \rvdffe_WIDTH31 is 166.250000
253. Printing statistics.
Area of module \rvclkhdr is 1.330000
254. Printing statistics.
Area of module \clockhdr is 1.330000
255. Printing statistics.
256. Printing statistics.
Area of module \rvdff_WIDTH31 is 164.920000
257. Printing statistics.
Area of module \rvdffe_WIDTH32 is 171.570000
258. Printing statistics.
Area of module \rvclkhdr is 1.330000
259. Printing statistics.
Area of module \clockhdr is 1.330000
260. Printing statistics.
261. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
262. Printing statistics.
Area of module \rvdffe_WIDTH74 is 395.010000
263. Printing statistics.
Area of module \rvclkhdr is 1.330000
264. Printing statistics.
Area of module \clockhdr is 1.330000
265. Printing statistics.
266. Printing statistics.
Area of module \rvdff_WIDTH74 is 393.680000
267. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
268. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
269. Printing statistics.
Area of module \exu_div_ctl is 2982.126000
270. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
271. Printing statistics.
Area of module \rvdff_WIDTH5 is 26.600000
272. Printing statistics.
Area of module \rvdff_WIDTH6 is 31.920000
273. Printing statistics.
Area of module \rvdffe_WIDTH33 is 176.890000
274. Printing statistics.
Area of module \rvclkhdr is 1.330000
275. Printing statistics.
Area of module \clockhdr is 1.330000
276. Printing statistics.
277. Printing statistics.
Area of module \rvdff_WIDTH33 is 175.560000
278. Printing statistics.
Area of module \rvdffs_WIDTH4 is 30.590000
279. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
280. Printing statistics.
Area of module \rvtwoscomp_WIDTH32 is 134.596000
281. Printing statistics.
Area of module \exu_mul_ctl is 13900.628000
Preserving hierarchical module: \exu_mul_ctl
282. Printing statistics.
Area of module \rvclkhdr is 1.330000
283. Printing statistics.
Area of module \clockhdr is 1.330000
284. Printing statistics.
285. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
286. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
287. Printing statistics.
Area of module \rvdff_WIDTH33 is 175.560000
288. Printing statistics.
Area of module \rvdff_WIDTH64 is 340.480000
289. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
290. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
291. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
292. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
293. Printing statistics.
Area of module \rvdff_WIDTH5 is 26.600000
294. Printing statistics.
Area of module \rvdffe_WIDTH20 is 107.730000
295. Printing statistics.
Area of module \rvclkhdr is 1.330000
296. Printing statistics.
Area of module \clockhdr is 1.330000
297. Printing statistics.
298. Printing statistics.
Area of module \rvdff_WIDTH20 is 106.400000
299. Printing statistics.
Area of module \rvdffe_WIDTH31 is 166.250000
300. Printing statistics.
Area of module \rvclkhdr is 1.330000
301. Printing statistics.
Area of module \clockhdr is 1.330000
302. Printing statistics.
303. Printing statistics.
Area of module \rvdff_WIDTH31 is 164.920000
304. Printing statistics.
Area of module \rvdffe_WIDTH32 is 171.570000
305. Printing statistics.
Area of module \rvclkhdr is 1.330000
306. Printing statistics.
Area of module \clockhdr is 1.330000
307. Printing statistics.
308. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
309. Printing statistics.
Area of module \rvdffe_WIDTH33 is 176.890000
310. Printing statistics.
Area of module \rvclkhdr is 1.330000
311. Printing statistics.
Area of module \clockhdr is 1.330000
312. Printing statistics.
313. Printing statistics.
Area of module \rvdff_WIDTH33 is 175.560000
314. Printing statistics.
Area of module \rvdffe_WIDTH63 is 336.490000
315. Printing statistics.
Area of module \rvclkhdr is 1.330000
316. Printing statistics.
Area of module \clockhdr is 1.330000
317. Printing statistics.
318. Printing statistics.
Area of module \rvdff_WIDTH63 is 335.160000
319. Printing statistics.
Area of module \rvdffe_WIDTH74 is 395.010000
320. Printing statistics.
Area of module \rvclkhdr is 1.330000
321. Printing statistics.
Area of module \clockhdr is 1.330000
322. Printing statistics.
323. Printing statistics.
Area of module \rvdff_WIDTH74 is 393.680000
324. Printing statistics.
Area of module \rvdffe_WIDTH76 is 405.650000
325. Printing statistics.
Area of module \rvclkhdr is 1.330000
326. Printing statistics.
Area of module \clockhdr is 1.330000
327. Printing statistics.
328. Printing statistics.
Area of module \rvdff_WIDTH76 is 404.320000
329. Printing statistics.
Area of module \rvdffs_WIDTH2 is 14.364000
330. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
331. Printing statistics.
Area of module \rvdffs_WIDTH5 is 37.772000
332. Printing statistics.
Area of module \rvdff_WIDTH5 is 26.600000
333. Printing statistics.
Area of module \ifu is 35380.394000
Preserving hierarchical module: \ifu
334. Printing statistics.
Area of module \ifu_aln_ctl is 12446.938000
Preserving hierarchical module: \ifu_aln_ctl
335. Printing statistics.
Area of module \ifu_compress_ctl is 249.774000
336. Printing statistics.
Area of module \rvbtb_addr_hash is 10.640000
337. Printing statistics.
Area of module \rvbtb_tag_hash is 14.364000
338. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
339. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
340. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
341. Printing statistics.
Area of module \rvdff_WIDTH8 is 42.560000
342. Printing statistics.
Area of module \rvdffe_WIDTH128 is 682.290000
343. Printing statistics.
Area of module \rvclkhdr is 1.330000
344. Printing statistics.
Area of module \clockhdr is 1.330000
345. Printing statistics.
346. Printing statistics.
Area of module \rvdff_WIDTH128 is 680.960000
347. Printing statistics.
Area of module \rvdffe_WIDTH16 is 86.450000
348. Printing statistics.
Area of module \rvclkhdr is 1.330000
349. Printing statistics.
Area of module \clockhdr is 1.330000
350. Printing statistics.
351. Printing statistics.
Area of module \rvdff_WIDTH16 is 85.120000
352. Printing statistics.
Area of module \rvdffe_WIDTH31 is 166.250000
353. Printing statistics.
Area of module \rvclkhdr is 1.330000
354. Printing statistics.
Area of module \clockhdr is 1.330000
355. Printing statistics.
356. Printing statistics.
Area of module \rvdff_WIDTH31 is 164.920000
357. Printing statistics.
Area of module \rvdffe_WIDTH48 is 256.690000
358. Printing statistics.
Area of module \rvclkhdr is 1.330000
359. Printing statistics.
Area of module \clockhdr is 1.330000
360. Printing statistics.
361. Printing statistics.
Area of module \rvdff_WIDTH48 is 255.360000
362. Printing statistics.
Area of module \rvdffe_WIDTH53 is 283.290000
363. Printing statistics.
Area of module \rvclkhdr is 1.330000
364. Printing statistics.
Area of module \clockhdr is 1.330000
365. Printing statistics.
366. Printing statistics.
Area of module \rvdff_WIDTH53 is 281.960000
367. Printing statistics.
Area of module \rvdffe_WIDTH8 is 43.890000
368. Printing statistics.
Area of module \rvclkhdr is 1.330000
369. Printing statistics.
Area of module \clockhdr is 1.330000
370. Printing statistics.
371. Printing statistics.
Area of module \rvdff_WIDTH8 is 42.560000
372. Printing statistics.
Area of module \rveven_paritycheck is 25.536000
373. Printing statistics.
Area of module \ifu_bp_ctl is 14107.842000
Preserving hierarchical module: \ifu_bp_ctl
374. Printing statistics.
Area of module \rvbradder is 287.546000
375. Printing statistics.
Area of module \rvbtb_addr_hash is 10.640000
376. Printing statistics.
Area of module \rvbtb_ghr_hash is 4.788000
377. Printing statistics.
Area of module \rvbtb_tag_hash is 14.364000
378. Printing statistics.
Area of module \rvclkhdr is 1.330000
379. Printing statistics.
Area of module \clockhdr is 1.330000
380. Printing statistics.
381. Printing statistics.
Area of module \rvdff_WIDTH13 is 69.160000
382. Printing statistics.
Area of module \rvdff_WIDTH5 is 26.600000
383. Printing statistics.
Area of module \rvdff_WIDTH9 is 47.880000
384. Printing statistics.
Area of module \rvdffe_WIDTH16 is 86.450000
385. Printing statistics.
Area of module \rvclkhdr is 1.330000
386. Printing statistics.
Area of module \clockhdr is 1.330000
387. Printing statistics.
388. Printing statistics.
Area of module \rvdff_WIDTH16 is 85.120000
389. Printing statistics.
Area of module \rvdffe_WIDTH26 is 139.650000
390. Printing statistics.
Area of module \rvclkhdr is 1.330000
391. Printing statistics.
Area of module \clockhdr is 1.330000
392. Printing statistics.
393. Printing statistics.
Area of module \rvdff_WIDTH26 is 138.320000
394. Printing statistics.
Area of module \rvdffe_WIDTH28 is 150.290000
395. Printing statistics.
Area of module \rvclkhdr is 1.330000
396. Printing statistics.
Area of module \clockhdr is 1.330000
397. Printing statistics.
398. Printing statistics.
Area of module \rvdff_WIDTH28 is 148.960000
399. Printing statistics.
Area of module \rvdffe_WIDTH31 is 166.250000
400. Printing statistics.
Area of module \rvclkhdr is 1.330000
401. Printing statistics.
Area of module \clockhdr is 1.330000
402. Printing statistics.
403. Printing statistics.
Area of module \rvdff_WIDTH31 is 164.920000
404. Printing statistics.
Area of module \rvdffs_WIDTH2 is 14.364000
405. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
406. Printing statistics.
Area of module \ifu_ifc_ctl is 1233.974000
407. Printing statistics.
Area of module \rvclkhdr is 1.330000
408. Printing statistics.
Area of module \clockhdr is 1.330000
409. Printing statistics.
410. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
411. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
412. Printing statistics.
Area of module \rvdff_WIDTH31 is 164.920000
413. Printing statistics.
Area of module \rvdff_WIDTH5 is 26.600000
414. Printing statistics.
Area of module \rvdffe_WIDTH31 is 166.250000
415. Printing statistics.
Area of module \rvclkhdr is 1.330000
416. Printing statistics.
Area of module \clockhdr is 1.330000
417. Printing statistics.
418. Printing statistics.
Area of module \rvdff_WIDTH31 is 164.920000
419. Printing statistics.
Area of module \ifu_mem_ctl is 7591.640000
420. Printing statistics.
Area of module \rvclkhdr is 1.330000
421. Printing statistics.
Area of module \clockhdr is 1.330000
422. Printing statistics.
423. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
424. Printing statistics.
Area of module \rvdff_WIDTH11 is 58.520000
425. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
426. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
427. Printing statistics.
Area of module \rvdff_WIDTH31 is 164.920000
428. Printing statistics.
Area of module \rvdff_WIDTH34 is 180.880000
429. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
430. Printing statistics.
Area of module \rvdff_WIDTH5 is 26.600000
431. Printing statistics.
Area of module \rvdff_WIDTH6 is 31.920000
432. Printing statistics.
Area of module \rvdff_WIDTH64 is 340.480000
433. Printing statistics.
Area of module \rvdff_WIDTH9 is 47.880000
434. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
435. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
436. Printing statistics.
Area of module \rvdffs_WIDTH11 is 80.864000
437. Printing statistics.
Area of module \rvdff_WIDTH11 is 58.520000
438. Printing statistics.
Area of module \rvdffs_WIDTH3 is 21.546000
439. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
440. Printing statistics.
Area of module \rveven_paritygen_WIDTH16 is 23.940000
441. Printing statistics.
Area of module \lsu is 45736.040000
Preserving hierarchical module: \lsu
442. Printing statistics.
Area of module \lsu_bus_intf is 22215.522000
Preserving hierarchical module: \lsu_bus_intf
443. Printing statistics.
Area of module \lsu_bus_buffer is 19348.840000
Preserving hierarchical module: \lsu_bus_buffer
444. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
445. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
446. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
447. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
448. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
449. Printing statistics.
Area of module \rvdff_WIDTH8 is 42.560000
450. Printing statistics.
Area of module \rvdffe_WIDTH32 is 171.570000
451. Printing statistics.
Area of module \rvclkhdr is 1.330000
452. Printing statistics.
Area of module \clockhdr is 1.330000
453. Printing statistics.
454. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
455. Printing statistics.
Area of module \rvdffe_WIDTH64 is 341.810000
456. Printing statistics.
Area of module \rvclkhdr is 1.330000
457. Printing statistics.
Area of module \clockhdr is 1.330000
458. Printing statistics.
459. Printing statistics.
Area of module \rvdff_WIDTH64 is 340.480000
460. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
461. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
462. Printing statistics.
Area of module \rvdffs_WIDTH2 is 14.364000
463. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
464. Printing statistics.
Area of module \rvdffs_WIDTH3 is 21.546000
465. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
466. Printing statistics.
Area of module \rvdffs_WIDTH4 is 30.590000
467. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
468. Printing statistics.
Area of module \rvdffs_WIDTH8 is 59.318000
469. Printing statistics.
Area of module \rvdff_WIDTH8 is 42.560000
470. Printing statistics.
Area of module \rvdffsc_WIDTH1 is 9.044000
471. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
472. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
473. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
474. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
475. Printing statistics.
Area of module \lsu_clkdomain is 153.216000
476. Printing statistics.
Area of module \rvclkhdr is 1.330000
477. Printing statistics.
Area of module \clockhdr is 1.330000
478. Printing statistics.
479. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
480. Printing statistics.
Area of module \lsu_dccm_ctl is 1733.256000
481. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
482. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
483. Printing statistics.
Area of module \rvdff_WIDTH7 is 37.240000
484. Printing statistics.
Area of module \lsu_ecc is 1202.054000
485. Printing statistics.
Area of module \rvecc_decode is 276.108000
486. Printing statistics.
Area of module \rvecc_encode is 122.094000
487. Printing statistics.
Area of module \lsu_lsc_ctl is 6032.348000
488. Printing statistics.
Area of module \lsu_addrcheck is 151.354000
489. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
490. Printing statistics.
Area of module \rvrangecheck_f0040000_64 is 11.172000
491. Printing statistics.
Area of module \rvrangecheck_f00c0000_32 is 13.566000
492. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
493. Printing statistics.
Area of module \rvdff_WIDTH12 is 63.840000
494. Printing statistics.
Area of module \rvdff_WIDTH18 is 95.760000
495. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
496. Printing statistics.
Area of module \rvdff_WIDTH64 is 340.480000
497. Printing statistics.
Area of module \rvdffs_WIDTH64 is 474.278000
498. Printing statistics.
Area of module \rvdff_WIDTH64 is 340.480000
499. Printing statistics.
Area of module \rvlsadder is 289.408000
500. Printing statistics.
Area of module \lsu_stbuf is 13089.860000
Preserving hierarchical module: \lsu_stbuf
501. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
502. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
503. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
504. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
505. Printing statistics.
Area of module \rvdffe_WIDTH16 is 86.450000
506. Printing statistics.
Area of module \rvclkhdr is 1.330000
507. Printing statistics.
Area of module \clockhdr is 1.330000
508. Printing statistics.
509. Printing statistics.
Area of module \rvdff_WIDTH16 is 85.120000
510. Printing statistics.
Area of module \rvdffe_WIDTH32 is 171.570000
511. Printing statistics.
Area of module \rvclkhdr is 1.330000
512. Printing statistics.
Area of module \clockhdr is 1.330000
513. Printing statistics.
514. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
515. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
516. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
517. Printing statistics.
Area of module \rvdffs_WIDTH3 is 21.546000
518. Printing statistics.
Area of module \rvdff_WIDTH3 is 15.960000
519. Printing statistics.
Area of module \rvdffs_WIDTH4 is 30.590000
520. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
521. Printing statistics.
Area of module \rvdffsc_WIDTH1 is 9.044000
522. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
523. Printing statistics.
Area of module \lsu_trigger is 1225.196000
524. Printing statistics.
Area of module \rvmaskandmatch is 224.238000
525. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
526. Printing statistics.
Area of module \pic_ctrl is 2067.086000
527. Printing statistics.
Area of module \cmp_and_mux_ID_BITS8_INTPRIORITY_BITS4 is 60.382000
528. Printing statistics.
Area of module \configurable_gw is 11.172000
529. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
530. Printing statistics.
Area of module \rvclkhdr is 1.330000
531. Printing statistics.
Area of module \clockhdr is 1.330000
532. Printing statistics.
533. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
534. Printing statistics.
Area of module \rvdff_WIDTH32 is 170.240000
535. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
536. Printing statistics.
Area of module \rvdff_WIDTH8 is 42.560000
537. Printing statistics.
Area of module \rvdffs_WIDTH1 is 7.182000
538. Printing statistics.
Area of module \rvdff_WIDTH1 is 5.320000
539. Printing statistics.
Area of module \rvdffs_WIDTH2 is 14.364000
540. Printing statistics.
Area of module \rvdff_WIDTH2 is 10.640000
541. Printing statistics.
Area of module \rvdffs_WIDTH4 is 30.590000
542. Printing statistics.
Area of module \rvdff_WIDTH4 is 21.280000
543. Printing statistics.
Area of module \rvsyncss_WIDTH8 is 85.120000
544. Printing statistics.
Area of module \rvdff_WIDTH8 is 42.560000
545. Printing statistics.
Area of module \rvclkhdr is 1.330000
546. Printing statistics.
Area of module \clockhdr is 1.330000
547. Printing statistics.
Warnings: 42 unique messages, 106 total
End of script. Logfile hash: b96bc51554, CPU: user 134.72s system 0.89s, MEM: 1226.74 MB peak
Yosys 0.33 (git sha1 2584903a0, gcc 11.4.0-1ubuntu1~22.04 -fPIC -Os)
Time spent: 46% 2x abc (110 sec), 17% 535x stat (43 sec), ...
Elapsed time: 4:03.90[h:]min:sec. CPU time: user 240.27 sys 3.64 (100%). Peak memory: 1256564KB.
